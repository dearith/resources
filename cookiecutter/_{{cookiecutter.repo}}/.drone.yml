# automatically generated from https://github.com/metwork-framework/resources/blob/master/cookiecutter/_%7B%7Bcookiecutter.repo%7D%7D/.drone.yml template

{% if cookiecutter.repo == "mfcom" %}
    {% set DEP_MODULE = "mfext" %}
    {% set BUILD_IMAGE_NAME = "mfcom-${OS_VERSION}-buildimage" %}
{% elif cookiecutter.repo == "mfext" %}
    {% set DEP_MODULE = "" %}
    {% set BUILD_IMAGE_NAME = "mfext-${OS_VERSION}-buildimage" %}
{% else %}
    {% set DEP_MODULE = "mfcom" %}
    {% set BUILD_IMAGE_NAME = "mfxxx-${OS_VERSION}-buildimage" %}
{% endif %}

bootstrap_common: &bootstrap_common
  pull: true
  commands:
    - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "${OS_VERSION}"; then echo "step bypass"; exit 0; fi; fi
    - mkdir -p /opt/metwork-{{cookiecutter.repo}}-$${TARGET_DIR}
{% if cookiecutter.repo == "mfext" %}
    - ./bootstrap.sh /opt/metwork-{{cookiecutter.repo}}-$${TARGET_DIR}
{% else %}
    - ./bootstrap.sh /opt/metwork-{{cookiecutter.repo}}-$${TARGET_DIR} /opt/metwork-{{DEP_MODULE}}-$${DEP_DIR}
{% endif %}
    - cat adm/root.mk
{% if cookiecutter.repo == "mfext" %}
    - CACHE_HASH=`./adm2/_build_cache_hash.sh .`
{% else %}
    - CACHE_HASH=`/opt/metwork-mfext/bin/_build_cache_hash.sh .`
{% endif %}
    - if ! test -f /buildcache/build_{{cookiecutter.repo}}_${DRONE_BRANCH}_$${CACHE_HASH}; then echo $${CACHE_HASH} >.drone_cache; fi

build_common: &build_common
  commands:
    - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "${OS_VERSION}"; then echo "step bypass"; exit 0; fi; fi
    - if ! test -f .drone_cache; then echo "step bypass"; exit 0; fi
    - export METWORK_BUILD_OS=${OS_VERSION}
{% if cookiecutter.repo == "mfext" %}
    - mkdir -p /opt/metwork-mfext-$${TARGET_DIR}
    - mkdir -p /pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}
    - make >/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - make doc >>/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - rm -Rf html_doc
    - cp -Rf /opt/metwork-mfext-$${TARGET_DIR}/html_doc .
    - make test >>/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - make RELEASE_BUILD=${DRONE_BUILD_NUMBER} rpm >>/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - mv /opt/metwork-mfext-$${TARGET_DIR}/*.rpm .
  volumes:
    - /pub:/pub
    - /buildcache:/buildcache
{% else %}
    - mkdir -p /opt/metwork-{{cookiecutter.repo}}-$${TARGET_DIR}
    - make
    - make doc
    - rm -Rf html_doc
    - cp -Rf /opt/metwork-{{cookiecutter.repo}}-$${TARGET_DIR}/html_doc .
    - make test
    - make RELEASE_BUILD=${DRONE_BUILD_NUMBER} rpm
    - mv /opt/metwork-{{cookiecutter.repo}}-$${TARGET_DIR}/*.rpm .
{% endif %}

publish_ci_common: &publish_ci_common
  commands:
    - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "${OS_VERSION}"; then echo "step bypass"; exit 0; fi; fi
    - if ! test -f .drone_cache; then echo "step bypass"; touch .drone_downstream_bypass; exit 0; fi
    - mkdir -p /pub/metwork/continuous_integration/rpms/${DRONE_BRANCH}/${OS_VERSION}/
    - cp *.rpm /pub/metwork/continuous_integration/rpms/${DRONE_BRANCH}/${OS_VERSION}/
    - createrepo --update /pub/metwork/continuous_integration/rpms/${DRONE_BRANCH}/${OS_VERSION}
    - if test "${OS_VERSION}" = "centos6"; then rm -Rf /pub/metwork/continuous_integration/docs/${DRONE_BRANCH}/{{cookiecutter.repo}}; mkdir -p /pub/metwork/continuous_integration/docs/${DRONE_BRANCH}/{{cookiecutter.repo}} ; cp -Rf html_doc/* /pub/metwork/continuous_integration/docs/${DRONE_BRANCH}/{{cookiecutter.repo}}/ ; fi
    - touch /buildcache/build_{{cookiecutter.repo}}_${DRONE_BRANCH}_`cat .drone_cache`
  volumes:
    - /pub:/pub
    - /buildcache:/buildcache

pipeline:
  bootstrap_integration_push:
    image: metwork/{{BUILD_IMAGE_NAME}}:integration
    environment:
{% if cookiecutter.repo == "mfcom" %}
      - DEP_DIR=master
      - TARGET_DIR=integration
{% elif cookiecutter.repo == "mfext" %}
      - TARGET_DIR=master
{% else %}
      - DEP_DIR=integration
      - TARGET_DIR=integration
{% endif %}
    <<: *bootstrap_common
    volumes:
      - /buildcache:/buildcache
    when:
      event: push
      branch: integration
{% if cookiecutter.repo != "mfext" %}
  bootstrap_integration_pr:
    image: metwork/{{BUILD_IMAGE_NAME}}:integration
    environment:
      - TARGET_DIR=integration
{% if cookiecutter.repo == "mfcom" %}
      - DEP_DIR=master
{% else %}
      - DEP_DIR=integration
{% endif %}
    <<: *bootstrap_common
    when:
      event: pull_request
      branch: integration
{% endif %}
  bootstrap:
    image: metwork/{{BUILD_IMAGE_NAME}}:master
    environment:
      - DEP_DIR=master
      - TARGET_DIR=master
    <<: *bootstrap_common
    volumes:
      - /buildcache:/buildcache
    when:
      event: push
      branch: [ master, ci_*, pci_* ]
  build_integration:
    <<: *build_common
    image: metwork/{{BUILD_IMAGE_NAME}}:integration
    environment:
{% if cookiecutter.repo == "mfext" %}
      - TARGET_DIR=master
{% else %}
      - TARGET_DIR=integration
{% endif %}
    when:
{% if cookiecutter.repo == "mfext" %}
      event: push
{% else %}
      event: [push, pull_request]
{% endif %}
      branch: integration
  build:
    <<: *build_common
    image: metwork/{{BUILD_IMAGE_NAME}}:master
    environment:
{% if cookiecutter.repo == "mfext" %}
      - TARGET_DIR=master
{% else %}
      - TARGET_DIR=${DRONE_BRANCH}
{% endif %}
    when:
      event: push
      branch: [ master, ci_*, pci_* ]
  publish_ci_integration:
    <<: *publish_ci_common
    image: metwork/{{BUILD_IMAGE_NAME}}:integration
    when:
      event: push
      branch: integration
  publish_ci:
    <<: *publish_ci_common
    image: metwork/{{BUILD_IMAGE_NAME}}:master
    when:
      event: push
      branch: [ master, pci_* ]
{% if cookiecutter.repo == "mfcom" %}
  trigger:
    image: metwork/drone-downstream-specific-image:master
    pull: true
    secrets: [ downstream_server, downstream_token ]
    repositories:
      - metwork-framework/docker-mfxxx-${OS_VERSION}-buildimage@${DRONE_BRANCH}
    when:
      status: success
      event: push
      branch: [ master, integration ]
{% endif %}
{% if cookiecutter.repo == "mfbase" or cookiecutter.repo == "mfserv" or cookiecutter.repo == "mfadmin" %}
  trigger_integration_tests:
    image: metwork/drone-downstream-specific-image:latest
    pull: true
    repositories:
      - metwork-framework/{{cookiecutter.repo}}-integration-tests-runner@${DRONE_BRANCH}
    params:
      - FORCED_OS_VERSION=${OS_VERSION}
    secrets: [ downstream_token, downstream_server ]
    when:
      status: [ success ]
      event: push
      branch: [ master, integration ]
{% elif cookiecutter.repo == "mfext" %}
  trigger:
    image: metwork/drone-downstream-specific-image:master
    pull: true
    repositories:
      - metwork-framework/docker-mfcom-${OS_VERSION}-buildimage@${DRONE_BRANCH}
    secrets: [ downstream_token, downstream_server ]
    when:
      status: [ success ]
      event: push
      branch: [ master, integration ]
  trigger_tests:
    image: metwork/drone-downstream-specific-image:master
    pull: true
    repositories:
      - metwork-framework/mfext-integration-tests@${DRONE_BRANCH}
      - metwork-framework/docker-mfext-centos6-testimage@${DRONE_BRANCH}
      - metwork-framework/docker-mfext-centos7-testimage@${DRONE_BRANCH}
    params:
      - FORCED_OS_VERSION=${OS_VERSION}
    secrets: [ downstream_token, downstream_server ]
    when:
      status: [ success ]
      event: push
      branch: [ master, integration ]
{% endif %}

matrix:
  OS_VERSION:
    - centos6
    - centos7

branches: [ master, integration, ci_*, pci_* ]
