# automatically generated from https://github.com/metwork-framework/resources/blob/master/cookiecutter/%7B%7Bcookiecutter.repo%7D%7D/docker-mfext-yyy-testimage_drone.yml)

{% if cookiecutter.repo|fnmatch('docker-mfext-*-testimage') %}
    {% set LIST = cookiecutter.repo.split("-") %}
    {% set OS = LIST[2] %}
{% else %}
    {% set OS = "" %}
{% endif %}

pipeline:
  docker:
    image: metwork/drone-docker-specific-image:latest
    commands:
      - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "{{OS}}"; then echo "step bypass"; touch .drone_downstream_bypass; exit 0; fi; fi
      - if test "${DRONE_BRANCH}" = "master"; then EXTRA_TAGS="-t metwork/mfext-{{OS}}-testimge:latest"; else EXTRA_TAGS=""; fi
      - docker build -t metwork/mfext-{{OS}}-testimage:${DRONE_BRANCH} $${EXTRA_TAGS} --build-arg BRANCH=${DRONE_BRANCH} --build-arg CACHEBUST=${DRONE_BUILD_NUMBER} .
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root:/root
    when:
      event: push 
  push:
    image: metwork/drone-docker-specific-image:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root:/root
    commands:
      - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "{{OS}}"; then echo "step bypass"; touch .drone_downstream_bypass; exit 0; fi; fi
      - docker push metwork/mfext-{{OS}}-testimage:${DRONE_BRANCH}
      - if test "${DRONE_BRANCH}" = "master"; then docker push metwork/mfext-{{OS}}-testimage:latest; fi
    when:
      event: push 

branches: [ master, integration, experimental*, release_* ]
